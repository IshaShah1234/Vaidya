// server.js - Vercel-compatible version
const express = require('express');
const path = require('path');

const app = express();

// Middleware
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// In-memory storage for generated blogs (since Vercel doesn't persist files)
let generatedBlogs = [];

// Simple blog generator class
class SimpleBlogGenerator {
  generateSlug(text) {
    return text
      .toLowerCase()
      .replace(/[^a-z0-9 -]/g, '')
      .replace(/\s+/g, '-')
      .replace(/-+/g, '-')
      .trim('-');
  }

  async generateBlogContent(topic, keywords = []) {
    // Template-based content generation
    const templates = {
      'diabetes': {
        title: "Understanding Diabetes: Symptoms, Causes, and Management - Vaidya.AI",
        content: `
          <h1>Understanding Diabetes: Symptoms, Causes, and Management</h1>
          <p>Diabetes is a chronic condition that affects how your body processes glucose (blood sugar). Understanding the symptoms and management strategies is crucial for maintaining good health.</p>
          
          <h2>Common Symptoms of Diabetes</h2>
          <ul>
            <li><strong>Frequent urination</strong> - Especially at night</li>
            <li><strong>Excessive thirst</strong> - Feeling constantly dehydrated</li>
            <li><strong>Unexplained weight loss</strong> - Despite normal eating habits</li>
            <li><strong>Extreme fatigue</strong> - Feeling tired even after rest</li>
            <li><strong>Blurred vision</strong> - Difficulty focusing</li>
            <li><strong>Slow healing wounds</strong> - Cuts and bruises take longer to heal</li>
          </ul>
          
          <h2>Risk Factors</h2>
          <p>Several factors can increase your risk of developing diabetes:</p>
          <ul>
            <li>Family history of diabetes</li>
            <li>Being overweight or obese</li>
            <li>Age (45 years or older)</li>
            <li>Sedentary lifestyle</li>
            <li>High blood pressure</li>
            <li>Gestational diabetes history</li>
          </ul>
          
          <h2>Management and Treatment</h2>
          <p>Effective diabetes management involves:</p>
          <ul>
            <li>Regular blood sugar monitoring</li>
            <li>Healthy diet planning</li>
            <li>Regular physical activity</li>
            <li>Medication as prescribed</li>
            <li>Regular medical check-ups</li>
          </ul>
          
          <h2>When to Consult a Doctor</h2>
          <p>If you experience any symptoms of diabetes, especially multiple symptoms together, consult with a healthcare professional immediately for proper diagnosis and treatment.</p>
          
          <h2>Prevention Tips</h2>
          <p>While Type 1 diabetes cannot be prevented, Type 2 diabetes can often be prevented or delayed through:</p>
          <ul>
            <li>Maintaining a healthy weight</li>
            <li>Eating a balanced diet</li>
            <li>Regular exercise</li>
            <li>Avoiding smoking</li>
            <li>Limiting alcohol consumption</li>
          </ul>
        `
      },
      'hypertension': {
        title: "High Blood Pressure: Causes, Symptoms, and Treatment - Vaidya.AI",
        content: `
          <h1>High Blood Pressure: Causes, Symptoms, and Treatment</h1>
          <p>High blood pressure (hypertension) is a common condition that can lead to serious health complications if left untreated. Learn about causes, symptoms, and effective management strategies.</p>
          
          <h2>Understanding Blood Pressure</h2>
          <p>Blood pressure measures the force of blood against artery walls. Normal blood pressure is typically below 120/80 mmHg.</p>
          
          <h2>Symptoms of High Blood Pressure</h2>
          <ul>
            <li>Headaches</li>
            <li>Shortness of breath</li>
            <li>Nosebleeds</li>
            <li>Dizziness</li>
            <li>Chest pain</li>
            <li>Vision problems</li>
          </ul>
          
          <h2>Causes and Risk Factors</h2>
          <p>Common causes include obesity, lack of physical activity, high sodium intake, stress, and genetics.</p>
          
          <h2>Treatment Options</h2>
          <p>Treatment may include lifestyle changes, medications, and regular monitoring as recommended by your healthcare provider.</p>
        `
      },
      'default': {
        title: `${topic} - Complete Medical Guide | Vaidya.AI`,
        content: `
          <h1>${topic} - Complete Medical Guide</h1>
          <p>Get comprehensive information about ${topic.toLowerCase()} from Vaidya.AI's medical experts. This guide covers symptoms, causes, treatments, and prevention strategies.</p>
          
          <h2>Overview</h2>
          <p>Understanding ${topic.toLowerCase()} is essential for maintaining good health. This comprehensive guide provides you with the latest medical information and expert advice.</p>
          
          <h2>Key Information About ${topic}</h2>
          <p>Here are the most important points to understand about ${topic.toLowerCase()}:</p>
          <ul>
            <li><strong>Early detection</strong> - Recognizing symptoms early can lead to better outcomes</li>
            <li><strong>Professional consultation</strong> - Always consult qualified healthcare professionals</li>
            <li><strong>Treatment options</strong> - Various effective treatments are available</li>
            <li><strong>Lifestyle factors</strong> - Diet, exercise, and lifestyle play crucial roles</li>
            <li><strong>Prevention strategies</strong> - Many conditions can be prevented with proper care</li>
          </ul>
          
          <h2>Symptoms to Watch For</h2>
          <p>Common signs and symptoms related to ${topic.toLowerCase()} that you should be aware of. If you experience any concerning symptoms, seek medical attention promptly.</p>
          
          <h2>When to Seek Medical Help</h2>
          <p>If you have concerns about ${topic.toLowerCase()}, don't wait. Consult with qualified healthcare professionals for proper diagnosis, treatment, and ongoing care.</p>
          
          <h2>Prevention and Management</h2>
          <p>Many health conditions can be prevented or effectively managed with:</p>
          <ul>
            <li>Regular medical check-ups</li>
            <li>Healthy lifestyle choices</li>
            <li>Proper nutrition</li>
            <li>Regular exercise</li>
            <li>Stress management</li>
            <li>Following medical advice</li>
          </ul>
          
          <h2>Expert Medical Advice</h2>
          <p>For personalized medical advice regarding ${topic.toLowerCase()}, consult with our qualified doctors on Vaidya.AI. Get expert guidance tailored to your specific needs.</p>
        `
      }
    };

    // Find matching template or use default
    let template = templates.default;
    const topicLower = topic.toLowerCase();
    
    for (const key in templates) {
      if (key !== 'default' && topicLower.includes(key)) {
        template = templates[key];
        break;
      }
    }

    return {
      title: template.title,
      metaDescription: `Learn about ${topic} with expert medical advice from Vaidya.AI. Get comprehensive information, symptoms, treatment options, and professional guidance.`,
      content: template.content,
      keywords: keywords.length > 0 ? keywords : [topic, 'medical advice', 'health information', 'symptoms', 'treatment', 'vaidya.ai'],
      slug: this.generateSlug(topic)
    };
  }

  createHTMLPage(blogData) {
    return `<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${blogData.title}</title>
    <meta name="description" content="${blogData.metaDescription}">
    <meta name="keywords" content="${blogData.keywords.join(', ')}">
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="article">
    <meta property="og:title" content="${blogData.title}">
    <meta property="og:description" content="${blogData.metaDescription}">
    <meta property="og:url" content="https://blog.vaidya.ai/${blogData.slug}">
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image">
    <meta property="twitter:title" content="${blogData.title}">
    <meta property="twitter:description" content="${blogData.metaDescription}">
    
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
        }
        .container {
            background: white;
            padding: 40px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }
        h1 {
            color: #2c5aa0;
            border-bottom: 3px solid #4CAF50;
            padding-bottom: 15px;
            font-size: 2.2rem;
            margin-bottom: 25px;
        }
        h2 {
            color: #2c5aa0;
            margin-top: 35px;
            margin-bottom: 15px;
            font-size: 1.5rem;
        }
        h3 {
            color: #666;
            margin-top: 25px;
            margin-bottom: 10px;
        }
        p {
            margin-bottom: 15px;
            font-size: 1.1rem;
        }
        ul {
            padding-left: 25px;
            margin-bottom: 20px;
        }
        li {
            margin-bottom: 10px;
            font-size: 1.05rem;
        }
        strong {
            color: #2c5aa0;
        }
        .cta-box {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            border-radius: 15px;
            text-align: center;
            margin: 40px 0;
            box-shadow: 0 5px 20px rgba(102, 126, 234, 0.3);
        }
        .cta-button {
            display: inline-block;
            background: #4CAF50;
            color: white;
            padding: 15px 30px;
            text-decoration: none;
            border-radius: 25px;
            font-weight: bold;
            margin-top: 15px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(76, 175, 80, 0.3);
        }
        .cta-button:hover {
            background: #45a049;
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(76, 175, 80, 0.4);
        }
        .disclaimer {
            background: #f0f8ff;
            border-left: 4px solid #2c5aa0;
            padding: 20px;
            margin: 30px 0;
            border-radius: 8px;
            font-size: 0.95rem;
        }
        .header-nav {
            text-align: center;
            margin-bottom: 35px;
            padding: 25px;
            background: linear-gradient(135deg, #2c5aa0 0%, #4CAF50 100%);
            color: white;
            border-radius: 15px;
        }
        .logo {
            font-size: 26px;
            font-weight: bold;
            margin-bottom: 10px;
        }
        @media (max-width: 768px) {
            body {
                padding: 10px;
            }
            .container {
                padding: 25px;
            }
            h1 {
                font-size: 1.8rem;
            }
            h2 {
                font-size: 1.3rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header-nav">
            <div class="logo">🩺 Vaidya.AI Health Blog</div>
            <p>Your trusted source for expert medical information and health guidance</p>
        </div>
        
        ${blogData.content}
        
        <div class="cta-box">
            <h3>Need Professional Medical Advice?</h3>
            <p>Don't let health concerns wait. Get instant consultation with qualified doctors on Vaidya.AI</p>
            <a href="https://vaidya.ai" class="cta-button">Consult Doctor Now</a>
        </div>
        
        <div class="disclaimer">
            <strong>Medical Disclaimer:</strong> This content is for informational purposes only and should not replace professional medical advice. Always consult with qualified healthcare professionals for proper diagnosis and treatment. For immediate medical consultation, visit <a href="https://vaidya.ai" style="color: #2c5aa0; text-decoration: none;">vaidya.ai</a>.
        </div>
    </div>
    
    <!-- Schema Markup for SEO -->
    <script type="application/ld+json">
    {
        "@context": "https://schema.org",
        "@type": "Article",
        "headline": "${blogData.title}",
        "description": "${blogData.metaDescription}",
        "author": {
            "@type": "Organization",
            "name": "Vaidya.AI"
        },
        "publisher": {
            "@type": "Organization",
            "name": "Vaidya.AI",
            "logo": {
                "@type": "ImageObject",
                "url": "https://vaidya.ai/logo.png"
            }
        },
        "datePublished": "${new Date().toISOString()}",
        "dateModified": "${new Date().toISOString()}",
        "mainEntityOfPage": {
            "@type": "WebPage",
            "@id": "https://blog.vaidya.ai/${blogData.slug}"
        }
    }
    </script>
</body>
</html>`;
  }

  async generateAndSaveBlog(topic, keywords = []) {
    console.log(`Generating blog for: ${topic}`);
    
    try {
      // Generate content using templates
      const blogData = await this.generateBlogContent(topic, keywords);
      
      // Create HTML
      const html = this.createHTMLPage(blogData);
      
      // Store in memory instead of file system
      const blogEntry = {
        id: Date.now().toString(),
        name: blogData.slug,
        title: blogData.title,
        url: `/blog/${blogData.slug}`,
        html: html,
        keywords: blogData.keywords,
        created: new Date().toISOString()
      };
      
      // Add to in-memory storage
      generatedBlogs.unshift(blogEntry);
      
      // Keep only last 50 blogs to prevent memory issues
      if (generatedBlogs.length > 50) {
        generatedBlogs = generatedBlogs.slice(0, 50);
      }
      
      console.log(`Blog generated: ${blogData.title}`);
      
      return {
        url: blogEntry.url,
        title: blogData.title,
        keywords: blogData.keywords
      };
    } catch (error) {
      console.error('Error generating blog:', error);
      throw error;
    }
  }
}

// Initialize Blog Generator
const blogGenerator = new SimpleBlogGenerator();

// Serve the main HTML file
app.get('/', (req, res) => {
  res.send(`<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vaidya.AI Blog Generator</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .header {
            background: linear-gradient(135deg, #2c5aa0 0%, #4CAF50 100%);
            color: white;
            padding: 40px;
            text-align: center;
        }
        
        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 15px;
        }
        
        .header p {
            font-size: 1.2rem;
            opacity: 0.9;
        }
        
        .main-content {
            padding: 40px;
        }
        
        .generator-section {
            background: #f8f9fa;
            padding: 30px;
            border-radius: 15px;
            margin-bottom: 30px;
        }
        
        .form-group {
            margin-bottom: 25px;
        }
        
        label {
            display: block;
            font-weight: 600;
            margin-bottom: 8px;
            color: #333;
            font-size: 1.1rem;
        }
        
        input[type="text"], textarea {
            width: 100%;
            padding: 15px;
            border: 2px solid #e1e5e9;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }
        
        input[type="text"]:focus, textarea:focus {
            outline: none;
            border-color: #4CAF50;
            box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);
        }
        
        textarea {
            min-height: 100px;
            resize: vertical;
        }
        
        .btn {
            background: linear-gradient(135deg, #4CAF50 0%, #45a049 100%);
            color: white;
            border: none;
            padding: 15px 30px;
            font-size: 1.1rem;
            font-weight: 600;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(76, 175, 80, 0.3);
        }
        
        .btn:disabled {
            background: #ccc;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }
        
        .loading {
            display: none;
            text-align: center;
            padding: 20px;
        }
        
        .spinner {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #4CAF50;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .result {
            display: none;
            background: #d4edda;
            border: 1px solid #c3e6cb;
            color: #155724;
            padding: 20px;
            border-radius: 10px;
            margin-top: 20px;
        }
        
        .error {
            display: none;
            background: #f8d7da;
            border: 1px solid #f5c6cb;
            color: #721c24;
            padding: 20px;
            border-radius: 10px;
            margin-top: 20px;
        }
        
        .blogs-section {
            background: #f8f9fa;
            padding: 30px;
            border-radius: 15px;
        }
        
        .blog-item {
            background: white;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 15px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .blog-info h3 {
            color: #2c5aa0;
            margin-bottom: 5px;
        }
        
        .blog-info p {
            color: #666;
            font-size: 0.9rem;
        }
        
        .blog-actions a {
            background: #2c5aa0;
            color: white;
            padding: 8px 16px;
            text-decoration: none;
            border-radius: 5px;
            margin-left: 10px;
            transition: background 0.3s;
        }
        
        .blog-actions a:hover {
            background: #1e3f72;
        }
        
        .quick-topics {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 15px;
        }
        
        .topic-tag {
            background: #e3f2fd;
            color: #1976d2;
            padding: 8px 16px;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s;
            border: 2px solid transparent;
        }
        
        .topic-tag:hover {
            background: #1976d2;
            color: white;
        }
        
        @media (max-width: 768px) {
            .container {
                margin: 10px;
                border-radius: 15px;
            }
            
            .header {
                padding: 30px 20px;
            }
            
            .header h1 {
                font-size: 2rem;
                flex-direction: column;
                gap: 10px;
            }
            
            .main-content {
                padding: 20px;
            }
            
            .blog-item {
                flex-direction: column;
                align-items: flex-start;
                gap: 15px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>🩺 Vaidya.AI Blog Generator</h1>
            <p>Generate SEO-optimized medical blogs to boost your search rankings</p>
        </div>
        
        <div class="main-content">
            <!-- Blog Generator Section -->
            <div class="generator-section">
                <h2 style="margin-bottom: 20px; color: #2c5aa0;">Generate New Blog</h2>
                
                <form id="blogForm">
                    <div class="form-group">
                        <label for="topic">Medical Topic or Question:</label>
                        <input type="text" id="topic" name="topic" placeholder="e.g., What are the symptoms of diabetes?" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="keywords">Target Keywords (comma-separated):</label>
                        <textarea id="keywords" name="keywords" placeholder="diabetes symptoms, blood sugar, early signs, medical advice"></textarea>
                    </div>
                    
                    <button type="submit" class="btn" id="generateBtn">
                        Generate Blog Post
                    </button>
                </form>
                
                <!-- Quick Topic Suggestions -->
                <div style="margin-top: 25px;">
                    <label>Quick Topic Suggestions:</label>
                    <div class="quick-topics">
                        <span class="topic-tag" onclick="fillTopic('Diabetes symptoms and early warning signs', 'diabetes symptoms, blood sugar symptoms, early diabetes signs, diabetes diagnosis')">Diabetes Symptoms</span>
                        <span class="topic-tag" onclick="fillTopic('High blood pressure causes and treatment', 'high blood pressure, hypertension symptoms, blood pressure treatment, heart health')">Hypertension</span>
                        <span class="topic-tag" onclick="fillTopic('Heart attack warning signs', 'heart attack symptoms, chest pain, cardiac emergency, heart disease')">Heart Attack Signs</span>
                        <span class="topic-tag" onclick="fillTopic('Common cold vs flu symptoms', 'cold symptoms, flu symptoms, viral infection, respiratory illness')">Cold vs Flu</span>
                        <span class="topic-tag" onclick="fillTopic('Anxiety and panic attack symptoms', 'anxiety symptoms, panic attack, mental health, stress management')">Anxiety Symptoms</span>
                    </div>
                </div>
                
                <!-- Loading State -->
                <div class="loading" id="loading">
                    <div class="spinner"></div>
                    <p>Generating your blog post... This may take a few seconds.</p>
                </div>
                
                <!-- Success Result -->
                <div class="result" id="result">
                    <h3>✅ Blog Generated Successfully!</h3>
                    <p id="resultMessage"></p>
                    <div style="margin-top: 15px;">
                        <a id="viewBlogLink" href="#" target="_blank" class="btn" style="display: inline-block; width: auto; margin-right: 10px;">View Blog</a>
                        <button onclick="loadBlogs()" class="btn" style="background: #2c5aa0; width: auto;">Refresh List</button>
                    </div>
                </div>
                
                <!-- Error State -->
                <div class="error" id="error">
                    <h3>❌ Error</h3>
                    <p id="errorMessage"></p>
                </div>
            </div>
            
            <!-- Generated Blogs Section -->
            <div class="blogs-section">
                <h2 style="margin-bottom: 20px; color: #2c5aa0;" id="blogsTitle">Generated Blogs</h2>
                <div id="blogsList">
                    <div style="text-align: center; padding: 40px; color: #666;">
                        <div style="font-size: 3rem; margin-bottom: 20px;">📝</div>
                        <h3>No blogs generated yet</h3>
                        <p>Create your first blog using the generator above!</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Handle form submission
        document.getElementById('blogForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const topic = document.getElementById('topic').value.trim();
            const keywords = document.getElementById('keywords').value.split(',').map(k => k.trim()).filter(k => k);
            
            if (!topic) {
                showError('Please enter a medical topic or question.');
                return;
            }
            
            await generateBlog(topic, keywords);
        });

        async function generateBlog(topic, keywords) {
            // Show loading state
            document.getElementById('loading').style.display = 'block';
            document.getElementById('result').style.display = 'none';
            document.getElementById('error').style.display = 'none';
            document.getElementById('generateBtn').disabled = true;
            
            try {
                const response = await fetch('/api/generate-blog', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ topic, keywords })
                });
                
                const data = await response.json();
                
                if (data.success) {
                    // Show success
                    document.getElementById('resultMessage').innerHTML = \`
                        <strong>Blog "\${data.blog.title}" generated successfully!</strong><br>
                        <small>Keywords: \${data.blog.keywords.join(', ')}</small>
                    \`;
                    document.getElementById('viewBlogLink').href = data.blog.url;
                    document.getElementById('result').style.display = 'block';
                    
                    // Clear form
                    document.getElementById('topic').value = '';
                    document.getElementById('keywords').value = '';
                    
                    // Reload blogs list
                    setTimeout(() => {
                        loadBlogs();
                    }, 1000);
                } else {
                    throw new Error(data.error || 'Unknown error occurred');
                }
            } catch (error) {
                console.error('Generation error:', error);
                showError(error.message || 'Failed to generate blog. Please try again.');
            } finally {
                // Hide loading state
                document.getElementById('loading').style.display = 'none';
                document.getElementById('generateBtn').disabled = false;
            }
        }

        function showError(message) {
            document.getElementById('errorMessage').textContent = message;
            document.getElementById('error').style.display = 'block';
            document.getElementById('result').style.display = 'none';
        }

        // Load and display generated blogs
        async function loadBlogs() {
            try {
                const response = await fetch('/api/blogs');
                const data = await response.json();
                
                const blogsList = document.getElementById('blogsList');
                
                if (data.blogs.length === 0) {
                    blogsList.innerHTML = \`
                        <div style="text-align: center; padding: 40px; color: #666;">
                            <div style="font-size: 3rem; margin-bottom: 20px;">📝</div>
                            <h3>No blogs generated yet</h3>
                            <p>Create your first blog using the generator above!</p>
                        </div>
                    \`;
                    return;
                }
                
                blogsList.innerHTML = data.blogs.map(blog => \`
                    <div class="blog-item">
                        <div class="blog-info">
                            <h3>\${blog.title || formatBlogTitle(blog.name)}</h3>
                            <p>📅 Created: \${formatDate(blog.created)} | 🔗 <span style="color: #4CAF50;">Ready for SEO</span></p>
                        </div>
                        <div class="blog-actions">
                            <a href="\${blog.url}" target="_blank">👁️ View</a>
                        </div>
                    </div>
                \`).join('');
            } catch (error) {
                console.error('Error loading blogs:', error);
                document.getElementById('blogsList').innerHTML = \`
                    <div style="text-align: center; padding: 40px; color: #ff6b6b;">
                        <h3>⚠️ Error Loading Blogs</h3>
                        <p>Please refresh the page or try again later.</p>
                        <button onclick="loadBlogs()" class="btn" style="margin-top: 15px; width: auto;">🔄 Retry</button>
                    </div>
                \`;
            }
        }

        // Fill topic from quick suggestions
        function fillTopic(topic, keywords = '') {
            document.getElementById('topic').value = topic;
            document.getElementById('keywords').value = keywords;
            document.getElementById('topic').focus();
            
            // Add visual feedback
            const topicInput = document.getElementById('topic');
            topicInput.style.background = '#e8f5e8';
            setTimeout(() => {
                topicInput.style.background = '';
            }, 1000);
        }

        // Utility functions
        function formatBlogTitle(filename) {
            return filename
                .replace(/-/g, ' ')
                .replace(/\b\w/g, l => l.toUpperCase());
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            const options = { 
                year: 'numeric', 
                month: 'short', 
                day: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            };
            return date.toLocaleDateString('en-US', options);
        }

        // Load blogs on page load
        document.addEventListener('DOMContentLoaded', function() {
            loadBlogs();
        });
    </script>
</body>
</html>`);
});

// Health check route
app.get('/health', (req, res) => {
  res.json({ status: 'OK', timestamp: new Date().toISOString() });
});

// API route to generate blog
app.post('/api/generate-blog', async (req, res) => {
  try {
    const { topic, keywords } = req.body;
    
    if (!topic) {
      return res.status(400).json({ error: 'Topic is required' });
    }

    console.log(`Generating blog for: ${topic}`);
    
    // Add a small delay to simulate processing
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    // Generate blog using template generator
    const result = await blogGenerator.generateAndSaveBlog(topic, keywords || []);
    
    res.json({
      success: true,
      message: 'Blog generated successfully!',
      blog: {
        title: result.title,
        url: result.url,
        keywords: result.keywords
      }
    });
  } catch (error) {
    console.error('Error generating blog:', error);
    res.status(500).json({ 
      error: 'Failed to generate blog', 
      details: error.message 
    });
  }
});

// API route to get list of generated blogs
app.get('/api/blogs', (req, res) => {
  try {
    const blogs = generatedBlogs.map(blog => ({
      name: blog.name,
      title: blog.title,
      url: blog.url,
      created: blog.created
    }));
    
    res.json({ blogs });
  } catch (error) {
    console.error('Error fetching blogs:', error);
    res.status(500).json({ error: 'Failed to fetch blogs' });
  }
});

// Route to serve individual blog pages
app.get('/blog/:slug', (req, res) => {
  try {
    const slug = req.params.slug;
    const blog = generatedBlogs.find(b => b.name === slug);
    
    if (!blog) {
      return res.status(404).send(`
        <html>
          <body style="font-family: Arial, sans-serif; text-align: center; padding: 50px;">
            <h1>Blog Not Found</h1>
            <p>The requested blog post could not be found.</p>
            <a href="/" style="color: #2c5aa0;">← Back to Blog Generator</a>
          </body>
        </html>
      `);
    }
    
    res.send(blog.html);
  } catch (error) {
    console.error('Error serving blog:', error);
    res.status(500).send('Internal Server Error');
  }
});

// Error handling middleware
app.use((err, req, res, next) => {
  console.error('Server error:', err);
  res.status(500).json({ error: 'Internal server error' });
});

// 404 handler
app.use((req, res) => {
  res.status(404).json({ error: 'Route not found' });
});

// Export for Vercel
module.exports = app;